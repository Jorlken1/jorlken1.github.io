<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jorlken1.github.io</id>
    <title>jorlken Notes</title>
    <updated>2022-06-15T09:24:03.202Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jorlken1.github.io"/>
    <link rel="self" href="https://jorlken1.github.io/atom.xml"/>
    <subtitle>勤学如春起之苗，不见其长，日有精进</subtitle>
    <logo>https://jorlken1.github.io/images/avatar.png</logo>
    <icon>https://jorlken1.github.io/favicon.ico</icon>
    <rights>All rights reserved 2022, jorlken Notes</rights>
    <entry>
        <title type="html"><![CDATA[2.6 错误处理]]></title>
        <id>https://jorlken1.github.io/post/26-cuo-wu-chu-li/</id>
        <link href="https://jorlken1.github.io/post/26-cuo-wu-chu-li/">
        </link>
        <updated>2022-06-15T08:41:49.000Z</updated>
        <content type="html"><![CDATA[<h3 id="为什么需要错误处理">为什么需要错误处理</h3>
<p>用户在调用框架的工具模块时报错，需要手动添加 <code>try{...}catch{...}</code> 来捕获，会增加用户的使用负担。</p>
<h3 id="如何完成错误处理">如何完成错误处理</h3>
<ol>
<li>注册错误程序处理程序。</li>
<li>用户可以选择是否忽略报错。</li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2.5 特性开关]]></title>
        <id>https://jorlken1.github.io/post/25-te-xing-kai-guan/</id>
        <link href="https://jorlken1.github.io/post/25-te-xing-kai-guan/">
        </link>
        <updated>2022-06-15T08:22:40.000Z</updated>
        <content type="html"><![CDATA[<h3 id="为什么需要特性开关">为什么需要特性开关？</h3>
<ol>
<li>对于不用的特性可以使用tree-sharking机制使其不被包含在最终的资源里。</li>
<li>在框架升级或降级的时候可以对遗留api进行遗留或者去除</li>
</ol>
<h3 id="如何实现特性开关">如何实现特性开关？</h3>
<p>利用 rollup.js 的预定义常量插件来实现</p>
<p>拿是否使用选项式api举例子：</p>
<pre><code>// rollup.js 配置
{
    __FEATURE_OPTION_API__ : isBundlerESMBuild ? `__VUE_OPTIONS_API__` : true,
}

// Vue3 源码
if(__FEATURE_OPTION_API__){
    ...
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2.4 框架应该输出怎么样的产物]]></title>
        <id>https://jorlken1.github.io/post/24-kuang-jia-ying-gai-shu-chu-zen-me-yang-de-chan-wu/</id>
        <link href="https://jorlken1.github.io/post/24-kuang-jia-ying-gai-shu-chu-zen-me-yang-de-chan-wu/">
        </link>
        <updated>2022-06-02T08:56:39.000Z</updated>
        <content type="html"><![CDATA[<p>根据环境输出产物</p>
<ol>
<li>
<p>HTML中直接用script标签引入使用<br>
运用立即执行函数(IIFE)包裹，全局的Vue就可以使用了。<br>
使用：在rollup.js中，通过配置format:iife,即可输出该形式资源。</p>
</li>
<li>
<p>esm格式资源<br>
用户用<code>&lt;script type=&quot;module&quot; src=&quot;/path/to/vue.esm-browser.js&quot;&gt;&lt;/script&gt;</code>引入<br>
使用：配置format:esm。<br>
由于配置环境变量的不同，vue.runtime.esm-bundler.js 为提供给webpack和roll等打包工具使用。</p>
</li>
<li>
<p>cjs格式资源<br>
node使用<code>const vue = require(&quot;vue&quot;)</code> 引入，用于服务端渲染（ssr）。</p>
</li>
</ol>
]]></content>
    </entry>
</feed>